//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Test.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Test: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Test()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Test"",
    ""maps"": [
        {
            ""name"": ""Cube"",
            ""id"": ""1d672a49-35de-46ce-a9c8-02cb05c37fdb"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""77739af1-0456-4cce-ad09-dfec71b7b76b"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CameraLook"",
                    ""type"": ""PassThrough"",
                    ""id"": ""81760227-cd9b-480d-9b89-71a156ae8e98"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveUp"",
                    ""type"": ""Button"",
                    ""id"": ""33dcde2d-7523-41df-826d-6c6fc808df7e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.5)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDown"",
                    ""type"": ""Button"",
                    ""id"": ""2d355fe3-ad60-478a-bf33-4ddfc7c03568"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Join"",
                    ""type"": ""PassThrough"",
                    ""id"": ""00247639-f049-4f3c-8cf3-d2d10fc70dde"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b47c226e-6e8e-4585-b096-9ba1ca31768d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Value"",
                    ""id"": ""9b4943a2-433f-4fad-8356-55eaf4c8115b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d88b1745-82bd-4e81-b0bb-5c2511900197"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close"",
                    ""type"": ""PassThrough"",
                    ""id"": ""32805f3b-ac59-4983-b40d-e808d97365d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Parachute"",
                    ""type"": ""Button"",
                    ""id"": ""6392f651-a767-448c-b3c6-077693a07889"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""62f011b6-93a5-48ac-93a1-4cf596341c66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""ba1e3798-cf6b-4047-84b5-a42ce55d0b2c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Push"",
                    ""type"": ""PassThrough"",
                    ""id"": ""22aaf8b0-e4e2-402d-998d-1b5e4540a246"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pull"",
                    ""type"": ""Value"",
                    ""id"": ""fc6ee264-7812-4928-8b5d-fb4bb4b13249"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Close1"",
                    ""type"": ""Button"",
                    ""id"": ""a75d12ad-533a-4d29-a758-2b48069955b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""4f559f1e-0098-4bce-80bb-0a2d623ad7c9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SkipTrigger"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f11382c8-b968-4b02-867b-747c64ca478b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReleasePush"",
                    ""type"": ""Button"",
                    ""id"": ""44cc6db3-4385-49d4-9e28-206e1e25f03f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(pressPoint=0.1,behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmoteUp"",
                    ""type"": ""Button"",
                    ""id"": ""2cb5dc1c-9cfe-4a74-a2d8-a1762822deb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmoteRight"",
                    ""type"": ""Button"",
                    ""id"": ""ccccb858-2571-4215-af77-a0bda5263dbb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmoteDown"",
                    ""type"": ""Button"",
                    ""id"": ""ea66992e-0b38-4d2f-b584-85e07f5a72cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EmoteLeft"",
                    ""type"": ""Button"",
                    ""id"": ""acb55b29-8555-429b-b76e-b5484544d004"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9c0196da-8454-4a22-a742-60d385f0b95e"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3b08e10-c782-4876-834c-b61d78f24597"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""346da98c-08d2-4a3d-bea7-b847a2ee6b9e"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""New control scheme"",
                    ""action"": ""MoveUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b55183e7-87d4-462c-a586-4c79af8ebff4"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""New control scheme"",
                    ""action"": ""MoveDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a71b887-4df0-47cd-a5d8-e1027f43db85"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85acf37c-a9f9-4631-9ce0-21ff4e3e16f6"",
                    ""path"": ""<HID::Core (Plus) Wired Controller>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d028ee43-7075-43eb-97d8-62f6facf2e32"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Join"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa92c473-4441-4bd7-b53c-a645186eedef"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""590588b1-13be-4567-9936-4a47927587a8"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f5629a47-0e5f-4c91-9693-39f0489601d3"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""7870e354-0195-45a8-882e-a52e8aaf0974"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9c0c4460-4d11-4cce-aa1c-2e6bda97c054"",
                    ""path"": ""<XInputController>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6ac49ebd-510c-4312-83d6-96463d9c79b2"",
                    ""path"": ""<XInputController>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8e6819d3-0911-4faf-88d7-f8563ddcc8de"",
                    ""path"": ""<XInputController>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a62cc56a-7399-47c9-a247-dec6876f1925"",
                    ""path"": ""<XInputController>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Nintendo Switch"",
                    ""id"": ""920324eb-5fef-4193-854f-3b985305b96e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6747e4e3-404b-4003-85a2-1fee75415a4f"",
                    ""path"": ""<SwitchProControllerHID>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Switch Controller"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""65922e7e-4392-4e9c-8aa5-3cb0fe3bd5f8"",
                    ""path"": ""<SwitchProControllerHID>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Switch Controller"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""657071c6-9c87-46cd-8a49-c2135625f4c1"",
                    ""path"": ""<SwitchProControllerHID>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Switch Controller"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b7eac8f4-a237-4e6c-bc4b-fc4cc350b912"",
                    ""path"": ""<SwitchProControllerHID>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Switch Controller"",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow"",
                    ""id"": ""e24c6e81-ebd8-4d37-9fa8-7bd522bddfdf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8c918ba8-9069-4151-8236-84ffc715f205"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4aaceaff-a027-4bd6-a699-33cf40f3f256"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ca5484d3-4c5a-460d-8761-706756539210"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c3bf985f-54a4-42ae-a78d-faf96e8a6411"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""decd8cf6-b0ab-4ebc-a3bf-cbe01957bb19"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4dd4a2a1-f2fe-453c-ac06-38788e4b54db"",
                    ""path"": ""<DualShockGamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bb2c4d43-131e-4a23-acab-875f944fd118"",
                    ""path"": ""<DualShockGamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e1f4dd2f-da09-43b1-a93c-8e42e22e894d"",
                    ""path"": ""<DualShockGamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1ac26556-a5e0-4b17-8e6e-a0b0aa1f0f50"",
                    ""path"": ""<DualShockGamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraLook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2e67206c-4f09-4228-b3c4-a2bcd4c59177"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbeedb47-e572-4d0b-b15a-8abdce583c18"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24986921-27f2-4305-ab35-339f22fd863f"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1096b6df-2246-492e-abdb-321235d90a8d"",
                    ""path"": ""<XInputController>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""881c1070-944d-477e-b348-c1927a7fc870"",
                    ""path"": ""<SwitchProControllerHID>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Nintendo Switch Controller"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c6eb88d-1b1a-425b-a8fa-07a419df672d"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dde65e9-d3d7-4eb7-8bc2-f9a300fdd09d"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""New control scheme"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a550bde-b0dd-4948-aea1-02215de109ef"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6ac2420-8d73-423b-9dd0-a088922cde5d"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""53486f20-0fd5-4306-8baf-9d351e6eb3bf"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parachute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""883e09a2-4657-409d-b4a8-33558b4332fd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parachute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff39981c-133b-4a83-843e-919016937032"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Parachute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea75ddb4-04ed-492e-92ab-ccf62f1293f7"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7455457e-7737-4616-a1ac-19437d1d780a"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1c88e53-b948-466f-8261-6b7880097783"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""419e1da2-0a3b-4536-bf2c-55e1ec8ed8ed"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2dfd4d58-4e0b-492f-b30c-989042508f46"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c601917c-cb65-41ba-ac6c-de68db902358"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e5923fb-22a3-458d-bf4a-254de9cb6fe1"",
                    ""path"": ""<DualShockGamepad>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2bff1bb-2ae6-4620-926d-9338931240c2"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5ee9d5b-e5f1-445f-bb8f-d6f437fcc9af"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01433661-e492-453c-a1e3-6b2bd45023da"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1de16b0f-a733-474d-b12d-8e5d22afec02"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30f5dacd-49f2-4a4f-9eb8-4f3b8ae50e60"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a93bcaf-4329-4e16-b5be-1c465e855dbc"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": ""Hold(duration=1.2,pressPoint=0.5)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""268ca2f1-dec2-4fd9-82bf-51623a8d242f"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": ""Hold(duration=1.2,pressPoint=0.5)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f95f333-48e3-4d8c-9748-d0d52c172738"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Hold(duration=1.2,pressPoint=0.5)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e369a7d0-1b2d-4f0c-8a38-392e89965b5b"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff7ad7bb-b2a9-4607-abbf-16d29bb940aa"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d3b7238-ecfa-4f6a-af26-7f29bba04bd7"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SkipTrigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbfa1ad7-df7e-406d-97ef-a1aa22bf94ed"",
                    ""path"": ""<XInputController>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReleasePush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""212933a3-3d7f-4311-a99f-86855171190c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReleasePush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b2a5eff-e4a7-49fa-add2-57c16f28d026"",
                    ""path"": ""<DualShockGamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReleasePush"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5887669b-31e8-410c-8380-90f2d620c0b9"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""74294e06-29c8-405a-aee1-90b1850b0894"",
                    ""path"": ""<XInputController>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2fe29e3-a568-42c6-ac25-849cc64128c6"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d3d8558-e02a-49ea-a811-ec4e88ac9f98"",
                    ""path"": ""<XInputController>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ccbcd3f4-c044-46ed-9148-97b092969c79"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8b34343-e141-4e68-80bd-e553b2fa1544"",
                    ""path"": ""<XInputController>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e01e692d-d1a1-43d8-bc4a-6d2886514856"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6bc9e515-90a5-4412-971c-76e252523eea"",
                    ""path"": ""<XInputController>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EmoteLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogue"",
            ""id"": ""21b07403-8461-464c-9f17-1deabea60ff4"",
            ""actions"": [
                {
                    ""name"": ""StartDialogue"",
                    ""type"": ""PassThrough"",
                    ""id"": ""544f32f3-61fc-4011-93e5-e6162f9e0eb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ContinueDialogue"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6511a039-7d0c-4b7b-8e79-4a8e8c5ac2f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8bb0b0aa-18a6-4d82-9678-91ccfae7a3c5"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78871d29-22f3-4413-be37-36b43278049a"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ContinueDialogue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PauseControls"",
            ""id"": ""7f17af04-f74f-440c-b4b1-7e67d1df88c5"",
            ""actions"": [
                {
                    ""name"": ""Pause/Unpause"",
                    ""type"": ""Button"",
                    ""id"": ""86179dbf-23c6-4418-8dd4-2507af6cba15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Menu Joystick"",
                    ""type"": ""Value"",
                    ""id"": ""c3253ffc-75f4-4660-a25f-9090ed840471"",
                    ""expectedControlType"": ""Stick"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SelectOption"",
                    ""type"": ""Button"",
                    ""id"": ""542f070a-77f5-4094-bb6f-784f74e1fbbf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5cf1176c-1531-4fc2-a654-150e52853275"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause/Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90dbd5a0-32b3-49a5-8e27-08002a989c9b"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause/Unpause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ca59905-6196-498b-8bb7-f69f754e9291"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cbce8377-54f1-40a6-8737-a20cda1ce6ee"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Menu Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43cce7e5-57b1-48cf-bbf1-c331debdddd1"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""731b7ee8-b4d0-4e4e-96ff-0d58852c5a11"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""New control scheme"",
            ""bindingGroup"": ""New control scheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""New control scheme1"",
            ""bindingGroup"": ""New control scheme1"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Nintendo Switch Controller"",
            ""bindingGroup"": ""Nintendo Switch Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<SwitchProControllerHID>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Cube
        m_Cube = asset.FindActionMap("Cube", throwIfNotFound: true);
        m_Cube_Move = m_Cube.FindAction("Move", throwIfNotFound: true);
        m_Cube_CameraLook = m_Cube.FindAction("CameraLook", throwIfNotFound: true);
        m_Cube_MoveUp = m_Cube.FindAction("MoveUp", throwIfNotFound: true);
        m_Cube_MoveDown = m_Cube.FindAction("MoveDown", throwIfNotFound: true);
        m_Cube_Join = m_Cube.FindAction("Join", throwIfNotFound: true);
        m_Cube_Pick = m_Cube.FindAction("Pick", throwIfNotFound: true);
        m_Cube_Jump = m_Cube.FindAction("Jump", throwIfNotFound: true);
        m_Cube_Dash = m_Cube.FindAction("Dash", throwIfNotFound: true);
        m_Cube_Close = m_Cube.FindAction("Close", throwIfNotFound: true);
        m_Cube_Parachute = m_Cube.FindAction("Parachute", throwIfNotFound: true);
        m_Cube_Aim = m_Cube.FindAction("Aim", throwIfNotFound: true);
        m_Cube_Trigger = m_Cube.FindAction("Trigger", throwIfNotFound: true);
        m_Cube_Push = m_Cube.FindAction("Push", throwIfNotFound: true);
        m_Cube_Pull = m_Cube.FindAction("Pull", throwIfNotFound: true);
        m_Cube_Close1 = m_Cube.FindAction("Close1", throwIfNotFound: true);
        m_Cube_Skip = m_Cube.FindAction("Skip", throwIfNotFound: true);
        m_Cube_SkipTrigger = m_Cube.FindAction("SkipTrigger", throwIfNotFound: true);
        m_Cube_ReleasePush = m_Cube.FindAction("ReleasePush", throwIfNotFound: true);
        m_Cube_EmoteUp = m_Cube.FindAction("EmoteUp", throwIfNotFound: true);
        m_Cube_EmoteRight = m_Cube.FindAction("EmoteRight", throwIfNotFound: true);
        m_Cube_EmoteDown = m_Cube.FindAction("EmoteDown", throwIfNotFound: true);
        m_Cube_EmoteLeft = m_Cube.FindAction("EmoteLeft", throwIfNotFound: true);
        // Dialogue
        m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
        m_Dialogue_StartDialogue = m_Dialogue.FindAction("StartDialogue", throwIfNotFound: true);
        m_Dialogue_ContinueDialogue = m_Dialogue.FindAction("ContinueDialogue", throwIfNotFound: true);
        // PauseControls
        m_PauseControls = asset.FindActionMap("PauseControls", throwIfNotFound: true);
        m_PauseControls_PauseUnpause = m_PauseControls.FindAction("Pause/Unpause", throwIfNotFound: true);
        m_PauseControls_MenuJoystick = m_PauseControls.FindAction("Menu Joystick", throwIfNotFound: true);
        m_PauseControls_SelectOption = m_PauseControls.FindAction("SelectOption", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Cube
    private readonly InputActionMap m_Cube;
    private List<ICubeActions> m_CubeActionsCallbackInterfaces = new List<ICubeActions>();
    private readonly InputAction m_Cube_Move;
    private readonly InputAction m_Cube_CameraLook;
    private readonly InputAction m_Cube_MoveUp;
    private readonly InputAction m_Cube_MoveDown;
    private readonly InputAction m_Cube_Join;
    private readonly InputAction m_Cube_Pick;
    private readonly InputAction m_Cube_Jump;
    private readonly InputAction m_Cube_Dash;
    private readonly InputAction m_Cube_Close;
    private readonly InputAction m_Cube_Parachute;
    private readonly InputAction m_Cube_Aim;
    private readonly InputAction m_Cube_Trigger;
    private readonly InputAction m_Cube_Push;
    private readonly InputAction m_Cube_Pull;
    private readonly InputAction m_Cube_Close1;
    private readonly InputAction m_Cube_Skip;
    private readonly InputAction m_Cube_SkipTrigger;
    private readonly InputAction m_Cube_ReleasePush;
    private readonly InputAction m_Cube_EmoteUp;
    private readonly InputAction m_Cube_EmoteRight;
    private readonly InputAction m_Cube_EmoteDown;
    private readonly InputAction m_Cube_EmoteLeft;
    public struct CubeActions
    {
        private @Test m_Wrapper;
        public CubeActions(@Test wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Cube_Move;
        public InputAction @CameraLook => m_Wrapper.m_Cube_CameraLook;
        public InputAction @MoveUp => m_Wrapper.m_Cube_MoveUp;
        public InputAction @MoveDown => m_Wrapper.m_Cube_MoveDown;
        public InputAction @Join => m_Wrapper.m_Cube_Join;
        public InputAction @Pick => m_Wrapper.m_Cube_Pick;
        public InputAction @Jump => m_Wrapper.m_Cube_Jump;
        public InputAction @Dash => m_Wrapper.m_Cube_Dash;
        public InputAction @Close => m_Wrapper.m_Cube_Close;
        public InputAction @Parachute => m_Wrapper.m_Cube_Parachute;
        public InputAction @Aim => m_Wrapper.m_Cube_Aim;
        public InputAction @Trigger => m_Wrapper.m_Cube_Trigger;
        public InputAction @Push => m_Wrapper.m_Cube_Push;
        public InputAction @Pull => m_Wrapper.m_Cube_Pull;
        public InputAction @Close1 => m_Wrapper.m_Cube_Close1;
        public InputAction @Skip => m_Wrapper.m_Cube_Skip;
        public InputAction @SkipTrigger => m_Wrapper.m_Cube_SkipTrigger;
        public InputAction @ReleasePush => m_Wrapper.m_Cube_ReleasePush;
        public InputAction @EmoteUp => m_Wrapper.m_Cube_EmoteUp;
        public InputAction @EmoteRight => m_Wrapper.m_Cube_EmoteRight;
        public InputAction @EmoteDown => m_Wrapper.m_Cube_EmoteDown;
        public InputAction @EmoteLeft => m_Wrapper.m_Cube_EmoteLeft;
        public InputActionMap Get() { return m_Wrapper.m_Cube; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CubeActions set) { return set.Get(); }
        public void AddCallbacks(ICubeActions instance)
        {
            if (instance == null || m_Wrapper.m_CubeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CubeActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @CameraLook.started += instance.OnCameraLook;
            @CameraLook.performed += instance.OnCameraLook;
            @CameraLook.canceled += instance.OnCameraLook;
            @MoveUp.started += instance.OnMoveUp;
            @MoveUp.performed += instance.OnMoveUp;
            @MoveUp.canceled += instance.OnMoveUp;
            @MoveDown.started += instance.OnMoveDown;
            @MoveDown.performed += instance.OnMoveDown;
            @MoveDown.canceled += instance.OnMoveDown;
            @Join.started += instance.OnJoin;
            @Join.performed += instance.OnJoin;
            @Join.canceled += instance.OnJoin;
            @Pick.started += instance.OnPick;
            @Pick.performed += instance.OnPick;
            @Pick.canceled += instance.OnPick;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Dash.started += instance.OnDash;
            @Dash.performed += instance.OnDash;
            @Dash.canceled += instance.OnDash;
            @Close.started += instance.OnClose;
            @Close.performed += instance.OnClose;
            @Close.canceled += instance.OnClose;
            @Parachute.started += instance.OnParachute;
            @Parachute.performed += instance.OnParachute;
            @Parachute.canceled += instance.OnParachute;
            @Aim.started += instance.OnAim;
            @Aim.performed += instance.OnAim;
            @Aim.canceled += instance.OnAim;
            @Trigger.started += instance.OnTrigger;
            @Trigger.performed += instance.OnTrigger;
            @Trigger.canceled += instance.OnTrigger;
            @Push.started += instance.OnPush;
            @Push.performed += instance.OnPush;
            @Push.canceled += instance.OnPush;
            @Pull.started += instance.OnPull;
            @Pull.performed += instance.OnPull;
            @Pull.canceled += instance.OnPull;
            @Close1.started += instance.OnClose1;
            @Close1.performed += instance.OnClose1;
            @Close1.canceled += instance.OnClose1;
            @Skip.started += instance.OnSkip;
            @Skip.performed += instance.OnSkip;
            @Skip.canceled += instance.OnSkip;
            @SkipTrigger.started += instance.OnSkipTrigger;
            @SkipTrigger.performed += instance.OnSkipTrigger;
            @SkipTrigger.canceled += instance.OnSkipTrigger;
            @ReleasePush.started += instance.OnReleasePush;
            @ReleasePush.performed += instance.OnReleasePush;
            @ReleasePush.canceled += instance.OnReleasePush;
            @EmoteUp.started += instance.OnEmoteUp;
            @EmoteUp.performed += instance.OnEmoteUp;
            @EmoteUp.canceled += instance.OnEmoteUp;
            @EmoteRight.started += instance.OnEmoteRight;
            @EmoteRight.performed += instance.OnEmoteRight;
            @EmoteRight.canceled += instance.OnEmoteRight;
            @EmoteDown.started += instance.OnEmoteDown;
            @EmoteDown.performed += instance.OnEmoteDown;
            @EmoteDown.canceled += instance.OnEmoteDown;
            @EmoteLeft.started += instance.OnEmoteLeft;
            @EmoteLeft.performed += instance.OnEmoteLeft;
            @EmoteLeft.canceled += instance.OnEmoteLeft;
        }

        private void UnregisterCallbacks(ICubeActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @CameraLook.started -= instance.OnCameraLook;
            @CameraLook.performed -= instance.OnCameraLook;
            @CameraLook.canceled -= instance.OnCameraLook;
            @MoveUp.started -= instance.OnMoveUp;
            @MoveUp.performed -= instance.OnMoveUp;
            @MoveUp.canceled -= instance.OnMoveUp;
            @MoveDown.started -= instance.OnMoveDown;
            @MoveDown.performed -= instance.OnMoveDown;
            @MoveDown.canceled -= instance.OnMoveDown;
            @Join.started -= instance.OnJoin;
            @Join.performed -= instance.OnJoin;
            @Join.canceled -= instance.OnJoin;
            @Pick.started -= instance.OnPick;
            @Pick.performed -= instance.OnPick;
            @Pick.canceled -= instance.OnPick;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Dash.started -= instance.OnDash;
            @Dash.performed -= instance.OnDash;
            @Dash.canceled -= instance.OnDash;
            @Close.started -= instance.OnClose;
            @Close.performed -= instance.OnClose;
            @Close.canceled -= instance.OnClose;
            @Parachute.started -= instance.OnParachute;
            @Parachute.performed -= instance.OnParachute;
            @Parachute.canceled -= instance.OnParachute;
            @Aim.started -= instance.OnAim;
            @Aim.performed -= instance.OnAim;
            @Aim.canceled -= instance.OnAim;
            @Trigger.started -= instance.OnTrigger;
            @Trigger.performed -= instance.OnTrigger;
            @Trigger.canceled -= instance.OnTrigger;
            @Push.started -= instance.OnPush;
            @Push.performed -= instance.OnPush;
            @Push.canceled -= instance.OnPush;
            @Pull.started -= instance.OnPull;
            @Pull.performed -= instance.OnPull;
            @Pull.canceled -= instance.OnPull;
            @Close1.started -= instance.OnClose1;
            @Close1.performed -= instance.OnClose1;
            @Close1.canceled -= instance.OnClose1;
            @Skip.started -= instance.OnSkip;
            @Skip.performed -= instance.OnSkip;
            @Skip.canceled -= instance.OnSkip;
            @SkipTrigger.started -= instance.OnSkipTrigger;
            @SkipTrigger.performed -= instance.OnSkipTrigger;
            @SkipTrigger.canceled -= instance.OnSkipTrigger;
            @ReleasePush.started -= instance.OnReleasePush;
            @ReleasePush.performed -= instance.OnReleasePush;
            @ReleasePush.canceled -= instance.OnReleasePush;
            @EmoteUp.started -= instance.OnEmoteUp;
            @EmoteUp.performed -= instance.OnEmoteUp;
            @EmoteUp.canceled -= instance.OnEmoteUp;
            @EmoteRight.started -= instance.OnEmoteRight;
            @EmoteRight.performed -= instance.OnEmoteRight;
            @EmoteRight.canceled -= instance.OnEmoteRight;
            @EmoteDown.started -= instance.OnEmoteDown;
            @EmoteDown.performed -= instance.OnEmoteDown;
            @EmoteDown.canceled -= instance.OnEmoteDown;
            @EmoteLeft.started -= instance.OnEmoteLeft;
            @EmoteLeft.performed -= instance.OnEmoteLeft;
            @EmoteLeft.canceled -= instance.OnEmoteLeft;
        }

        public void RemoveCallbacks(ICubeActions instance)
        {
            if (m_Wrapper.m_CubeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICubeActions instance)
        {
            foreach (var item in m_Wrapper.m_CubeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CubeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CubeActions @Cube => new CubeActions(this);

    // Dialogue
    private readonly InputActionMap m_Dialogue;
    private List<IDialogueActions> m_DialogueActionsCallbackInterfaces = new List<IDialogueActions>();
    private readonly InputAction m_Dialogue_StartDialogue;
    private readonly InputAction m_Dialogue_ContinueDialogue;
    public struct DialogueActions
    {
        private @Test m_Wrapper;
        public DialogueActions(@Test wrapper) { m_Wrapper = wrapper; }
        public InputAction @StartDialogue => m_Wrapper.m_Dialogue_StartDialogue;
        public InputAction @ContinueDialogue => m_Wrapper.m_Dialogue_ContinueDialogue;
        public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
        public void AddCallbacks(IDialogueActions instance)
        {
            if (instance == null || m_Wrapper.m_DialogueActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Add(instance);
            @StartDialogue.started += instance.OnStartDialogue;
            @StartDialogue.performed += instance.OnStartDialogue;
            @StartDialogue.canceled += instance.OnStartDialogue;
            @ContinueDialogue.started += instance.OnContinueDialogue;
            @ContinueDialogue.performed += instance.OnContinueDialogue;
            @ContinueDialogue.canceled += instance.OnContinueDialogue;
        }

        private void UnregisterCallbacks(IDialogueActions instance)
        {
            @StartDialogue.started -= instance.OnStartDialogue;
            @StartDialogue.performed -= instance.OnStartDialogue;
            @StartDialogue.canceled -= instance.OnStartDialogue;
            @ContinueDialogue.started -= instance.OnContinueDialogue;
            @ContinueDialogue.performed -= instance.OnContinueDialogue;
            @ContinueDialogue.canceled -= instance.OnContinueDialogue;
        }

        public void RemoveCallbacks(IDialogueActions instance)
        {
            if (m_Wrapper.m_DialogueActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDialogueActions instance)
        {
            foreach (var item in m_Wrapper.m_DialogueActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DialogueActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DialogueActions @Dialogue => new DialogueActions(this);

    // PauseControls
    private readonly InputActionMap m_PauseControls;
    private List<IPauseControlsActions> m_PauseControlsActionsCallbackInterfaces = new List<IPauseControlsActions>();
    private readonly InputAction m_PauseControls_PauseUnpause;
    private readonly InputAction m_PauseControls_MenuJoystick;
    private readonly InputAction m_PauseControls_SelectOption;
    public struct PauseControlsActions
    {
        private @Test m_Wrapper;
        public PauseControlsActions(@Test wrapper) { m_Wrapper = wrapper; }
        public InputAction @PauseUnpause => m_Wrapper.m_PauseControls_PauseUnpause;
        public InputAction @MenuJoystick => m_Wrapper.m_PauseControls_MenuJoystick;
        public InputAction @SelectOption => m_Wrapper.m_PauseControls_SelectOption;
        public InputActionMap Get() { return m_Wrapper.m_PauseControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PauseControlsActions set) { return set.Get(); }
        public void AddCallbacks(IPauseControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_PauseControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PauseControlsActionsCallbackInterfaces.Add(instance);
            @PauseUnpause.started += instance.OnPauseUnpause;
            @PauseUnpause.performed += instance.OnPauseUnpause;
            @PauseUnpause.canceled += instance.OnPauseUnpause;
            @MenuJoystick.started += instance.OnMenuJoystick;
            @MenuJoystick.performed += instance.OnMenuJoystick;
            @MenuJoystick.canceled += instance.OnMenuJoystick;
            @SelectOption.started += instance.OnSelectOption;
            @SelectOption.performed += instance.OnSelectOption;
            @SelectOption.canceled += instance.OnSelectOption;
        }

        private void UnregisterCallbacks(IPauseControlsActions instance)
        {
            @PauseUnpause.started -= instance.OnPauseUnpause;
            @PauseUnpause.performed -= instance.OnPauseUnpause;
            @PauseUnpause.canceled -= instance.OnPauseUnpause;
            @MenuJoystick.started -= instance.OnMenuJoystick;
            @MenuJoystick.performed -= instance.OnMenuJoystick;
            @MenuJoystick.canceled -= instance.OnMenuJoystick;
            @SelectOption.started -= instance.OnSelectOption;
            @SelectOption.performed -= instance.OnSelectOption;
            @SelectOption.canceled -= instance.OnSelectOption;
        }

        public void RemoveCallbacks(IPauseControlsActions instance)
        {
            if (m_Wrapper.m_PauseControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPauseControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_PauseControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PauseControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PauseControlsActions @PauseControls => new PauseControlsActions(this);
    private int m_NewcontrolschemeSchemeIndex = -1;
    public InputControlScheme NewcontrolschemeScheme
    {
        get
        {
            if (m_NewcontrolschemeSchemeIndex == -1) m_NewcontrolschemeSchemeIndex = asset.FindControlSchemeIndex("New control scheme");
            return asset.controlSchemes[m_NewcontrolschemeSchemeIndex];
        }
    }
    private int m_Newcontrolscheme1SchemeIndex = -1;
    public InputControlScheme Newcontrolscheme1Scheme
    {
        get
        {
            if (m_Newcontrolscheme1SchemeIndex == -1) m_Newcontrolscheme1SchemeIndex = asset.FindControlSchemeIndex("New control scheme1");
            return asset.controlSchemes[m_Newcontrolscheme1SchemeIndex];
        }
    }
    private int m_NintendoSwitchControllerSchemeIndex = -1;
    public InputControlScheme NintendoSwitchControllerScheme
    {
        get
        {
            if (m_NintendoSwitchControllerSchemeIndex == -1) m_NintendoSwitchControllerSchemeIndex = asset.FindControlSchemeIndex("Nintendo Switch Controller");
            return asset.controlSchemes[m_NintendoSwitchControllerSchemeIndex];
        }
    }
    public interface ICubeActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnCameraLook(InputAction.CallbackContext context);
        void OnMoveUp(InputAction.CallbackContext context);
        void OnMoveDown(InputAction.CallbackContext context);
        void OnJoin(InputAction.CallbackContext context);
        void OnPick(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnClose(InputAction.CallbackContext context);
        void OnParachute(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
        void OnTrigger(InputAction.CallbackContext context);
        void OnPush(InputAction.CallbackContext context);
        void OnPull(InputAction.CallbackContext context);
        void OnClose1(InputAction.CallbackContext context);
        void OnSkip(InputAction.CallbackContext context);
        void OnSkipTrigger(InputAction.CallbackContext context);
        void OnReleasePush(InputAction.CallbackContext context);
        void OnEmoteUp(InputAction.CallbackContext context);
        void OnEmoteRight(InputAction.CallbackContext context);
        void OnEmoteDown(InputAction.CallbackContext context);
        void OnEmoteLeft(InputAction.CallbackContext context);
    }
    public interface IDialogueActions
    {
        void OnStartDialogue(InputAction.CallbackContext context);
        void OnContinueDialogue(InputAction.CallbackContext context);
    }
    public interface IPauseControlsActions
    {
        void OnPauseUnpause(InputAction.CallbackContext context);
        void OnMenuJoystick(InputAction.CallbackContext context);
        void OnSelectOption(InputAction.CallbackContext context);
    }
}
